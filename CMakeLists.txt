# CMakeLists.txt for imageviewer project
# Original CMakeLists.txt, generated from imageviewer.pro by Qt2cmake.pl

cmake_minimum_required( VERSION 2.6 )

project( imageviewer )

if(CMAKE_COMPILER_IS_GNUCXX)
    set( WARNING_FLAGS -Wall )
endif(CMAKE_COMPILER_IS_GNUCXX)

if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang") 
   set( WARNING_FLAGS "-Wall -Wno-overloaded-virtual" )
endif() 

if(WIN32 AND MSVC)
    # turn off various warnings - none needed in this compile
    set(WARNING_FLAGS "${WARNING_FLAGS} /wd4996")
    # foreach(warning 4244 4251 4267 4275 4290 4786 4305)
    # C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
    # C4800: 'int' : forcing value to bool 'true' or 'false' (performance warning)
    foreach(warning 4267 4800)
        set(WARNING_FLAGS "${WARNING_FLAGS} /wd${warning}")
    endforeach()
    set( MSVC_FLAGS "-DNOMINMAX -D_USE_MATH_DEFINES -D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS -D__CRT_NONSTDC_NO_WARNINGS" )
    # if (${MSVC_VERSION} EQUAL 1600)
    #    set( MSVC_LD_FLAGS "/FORCE:MULTIPLE" )
    # endif (${MSVC_VERSION} EQUAL 1600)
    #set( NOMINMAX 1 )
    # to distinguish between debug and release lib
    set( CMAKE_DEBUG_POSTFIX d )
else()
    # unix things...
endif()

set( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${WARNING_FLAGS} ${MSVC_FLAGS} -D_REENTRANT" )
set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${WARNING_FLAGS} ${MSVC_FLAGS} -D_REENTRANT" )
set( CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${MSVC_LD_FLAGS}" )

#############################################################################################
set( QT_USE_QTNETWORK TRUE )
set( QT_USE_QTXML TRUE )
set( QT_USE_QTXMLPATTERNS TRUE )
set( QT_USE_QTWEBKIT TRUE )
set( QT_USE_QT3SUPPORT TRUE )

find_package ( Qt4 COMPONENTS QtCore QtGui QtNetwork QtWebkit QtXml QtXmlPatterns REQUIRED )
include ( ${QT_USE_FILE} )
add_definitions( ${QT_DEFINITIONS} )
add_definitions( -DQT3_SUPPORT=1 )
# debug messages
message(STATUS "*** include ( ${QT_USE_FILE} )")
message(STATUS "*** add_definitions( ${QT_DEFINITIONS} )")

#############################################################################################
### BUILD EXECUTABLE ###
#############################################################################################
set( imageviewer_SRCS imageviewer.cpp main.cpp )
set( imageviewer_HDRS imageviewer.h )
# Added for DEBUG only
get_property(inc_dirs DIRECTORY PROPERTY INCLUDE_DIRECTORIES)
message(STATUS "*** inc_dirs = ${inc_dirs}")
QT4_WRAP_CPP( imageviewer_HDRS_MOC ${imageviewer_HDRS} )
add_executable( imageviewer ${imageviewer_SRCS} ${imageviewer_HDRS_MOC} )
target_link_libraries( imageviewer ${QT_LIBRARIES} )
if (MSVC)
    set_target_properties( imageviewer PROPERTIES DEBUG_POSTFIX d )
endif ()    
# deal with install 
# install(TARGETS imageviewer DESTINATION bin )
#############################################################################################

# eof - original generated by Qt2cmake.pl, on 2014/07/02 15:26:29
